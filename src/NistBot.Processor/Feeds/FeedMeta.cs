using System;
using System.IO;

namespace NistBot.Processor.Feeds
{
    internal class FeedMeta
    {
        public DateTimeOffset LastUpdated { get; set; }
        public int Size { get; set; }
        public int DownloadSize { get; set; }
        public byte[] Sha256Hash { get; set; }

        public static FeedMeta Parse(string text)
        {
            var result = new FeedMeta();

            using (var reader = new StringReader(text))
            {
                string line;
                while ((line = reader.ReadLine()) != null)
                {
                    line = line.Trim();
                    var idx = line.IndexOf(':');

                    if (idx == -1)
                    {
                        continue;
                    }

                    var key = line.Substring(0, idx);
                    var value = line.Substring(idx + 1);

                    switch (key)
                    {
                        case "lastModifiedDate":
                            result.LastUpdated = DateTimeOffset.Parse(value);
                            break;
                        case "size":
                            result.Size = Int32.Parse(value);
                            break;
                        case "gzSize":
                            result.DownloadSize = Int32.Parse(value);
                            break;
                        case "sha256":
                            result.Sha256Hash = Convert.FromBase64String(value);
                            break;
                    }
                }
            }

            return result;
        }
    }
}
